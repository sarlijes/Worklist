::::::::::::::::::::::::::::::::

: : : Exercise 1

::::::::::::::::::::::::::::::::

[Noppa]2-.-1[Pelinappula]
[Pelilauta]1-40[Ruutu]
[Peli]1-1[Pelilauta]
[Peli]1-2..8[Pelaaja]
[Pelaaja]1-1[Pelinappula]
[Pelinappula]1-1[Ruutu]


::::::::::::::::::::::::::::::::

: : : Exercise 2

::::::::::::::::::::::::::::::::

[Noppa]2-.-1[Pelinappula]
[Pelilauta]1-40[Ruutu]
[Peli]1-1[Pelilauta]
[Peli]1-2..8[Pelaaja]
[Pelaaja]1-1[Pelinappula]
[Pelinappula]1-1[Ruutu]
[Ruutu]1-1[Toiminto]
[Ruutu]1-n[Pelaaja]
[Ruutu]1-0..4[Rakennus]
[Kortti]n-1[Toiminto]

[Ruutu|+tyyppi: ENUM;+name: string;+kortti: Kortti; +omistaja: Pelaaja; + seuraavaRuutu: Ruutu]
[Pelilauta|+aloitusruutu: Ruutu;+vankila: Ruutu;]
[Pelilauta|+rahamäärä: integer;]
[Rakennus|+tyyppi: ENUM;]


::::::::::::::::::::::::::::::::

: : : Exercise 3

::::::::::::::::::::::::::::::::

title Exercise 3

main->Machine: new Machine()
main->Machine: drive()



::::::::::::::::::::::::::::::::

: : : Exercise 4

::::::::::::::::::::::::::::::::

title Exercise 4

main->*laitehallinto : new HKLLaitehallinto()
main->*rautatietori  : new Lataajalaite()
main->*ratikka6 : new Lukijalaite()
main->*bussi244 : new Lukijalaite()

main->laitehallinto : lisaaLataaja(rautatietori)
main->laitehallinto : lisaaLukija(ratikka6)
main->laitehallinto : lisaaLukija(bussi244)

main->*lippuLuukku : new Kioski()

main->lippuLuukku : ostaMatkakortti("Arto")
lippuLuukku->*artonKortti : new Matkakortti("Arto")
lippuLuukku->main : artonKortti 
main->rautatietori : lataaArvoa(artonKortti, 3)
rautatietori->artonKortti : kasvataArvoa(3)

main->ratikka6 : ostaLippu(artonKortti, 0)
ratikka6->artonKortti  : getArvo()
artonKortti->ratikka6 : 3.0
ratikka6->artonKortti : vahennaArvoa(1.5)
ratikka6->main : true
 
main->bussi244 : ostaLippu(artonKortti, 2)
bussi244->artonKortti  : getArvo()
artonKortti->bussi244 : 1.5
ratikka6->main : false

::::::::::::::::::::::::::::::::

: : : Week 5 exercise: sequence graph

::::::::::::::::::::::::::::::::

title Employee login Sequence

Employee->UI : click loginButton
UI->EmployeeDao : authenticate(password, username);
EmployeeDao-->UI : employee

UI->UI: stage.setScene(mainScene);
UI->UI: loggedInEmployee = employee;
UI-->Employee:

